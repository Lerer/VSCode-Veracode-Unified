{
    "name": "veracode",
    "displayName": "Veracode Unified Plugin - Unofficial Version",
    "description": "A plugin to incorporate Static and SCA findings from Veracode Application Profiles",
    "version": "0.1.0",
    "publisher": "Yaakov Lerer",
    "engines": {
        "vscode": "^1.58.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/Lerer/VSCode-Veracode-Unified"
    },
    "bugs": {
        "url": "https://github.com/Lerer/VSCode-Veracode-Unified/issues",
        "email": "ylerer@veracode.com"
    },
    "license": "MIT",
    "categories": [
        "Other"
    ],
    "galleryBanner": {
        "color": "#00B4E6",
        "theme": "dark"
    },
    "activationEvents": [
        "onCommand:veracodeUnifiedExplorer.refresh",
        "onView:veracodeUnifiedExplorer"
    ],
    "main": "./out/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Veracode",
            "properties": {
                "veracode.API profile in configuration file": {
                    "$id": "securityProfile",
                    "type": "string",
                    "default": "default",
                    "markdownDescription": "The profile (or section) of API credentials to be used for communicating with Veracode Platform.",
                    "scope": "application"
                },
                "veracode.credsFile": {
                    "type": "string",
                    "default": "",
                    "description": "Specifies the absolute filepath for the API Credentials"
                },
                "veracode.flawsCount": {
                    "type": "number",
                    "default": 200,
                    "description": "Number of issues to pull from the veracode platform (20-300)"
                },
                "veracode.logLevel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": "info",
                    "description": "Logging level (changes need a restart to take effect)",
                    "enum": [
                        "trace",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "silent"
                    ]
                },
                "veracode.proxyHost": {
                    "type": "string",
                    "default": "",
                    "description": "Specifies the name of the proxy server (e.g., https://company-proxy.com)"
                },
                "veracode.proxyPort": {
                    "type": "string",
                    "default": "0",
                    "description": "Specifies the port number on the proxy server (e.g., 8080)"
                },
                "veracode.proxyName": {
                    "type": "string",
                    "default": "",
                    "description": "Specifies the login name on the proxy server"
                },
                "veracode.proxyPassword": {
                    "type": "string",
                    "default": "",
                    "description": "Specifies the login password on the proxy server"
                },
                "veracode.sandboxCount": {
                    "type": "number",
                    "default": 5,
                    "description": "Specifies the maximum number of sandboxes to show for each application (1-25)"
                }
            }
        },
        "views": {
            "explorer": [
                {
                    "id": "veracodeUnifiedExplorer",
                    "name": "Veracode"
                }
            ]
        },
        "commands": [
            {
                "command": "veracodeUnifiedExplorer.refresh",
                "title": "Refresh",
                "category": "Veracode",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "veracodeUnifiedExplorer.sortSeverity",
                "title": "Group by Severity",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.sortCwe",
                "title": "Group by CWE",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.sortFlawCategory",
                "title": "Group by Flaw Category",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.filterFlawIncMitigated",
                "title": "Include mitigated",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.filterFlawExcMitigated",
                "title": "Exclude mitigated",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.filterFlawIncNoneEffectPolicy",
                "title": "Include not Effect policy",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.filterFlawOnlyEffectPolicy",
                "title": "Effect Policy Only",
                "category": "Veracode"
            },
            {
                "command": "veracodeUnifiedExplorer.proposeMitigation",
                "title": "Annotations",
                "category": "Veracode"
            },
            {
                "command": "sca.start",
                "title": "Show related SCA findings",
                "category": "Veracode"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "veracodeUnifiedExplorer.refresh",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "veracodeUnifiedExplorer.sortSeverity",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "navigation@1"
                },
                {
                    "command": "veracodeUnifiedExplorer.sortCwe",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "navigation@2"
                },
                {
                    "command": "veracodeUnifiedExplorer.sortFlawCategory",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "navigation@3"
                },
                {
                    "submenu": "filter.submenu",
                    "group": "filter@0"
                },
                {
                    "command": "veracodeUnifiedExplorer.proposeMitigation",
                    "when": "view == veracodeUnifiedExplorer && viewItem == flaw",
                    "group": "mitigations"
                },
                {
                    "command": "sca.start",
                    "when": "view == veracodeUnifiedExplorer && viewItem == sandbox",
                    "group": "SCA"
                }
            ],
            "filter.submenu": [
                {
                    "command": "veracodeUnifiedExplorer.filterFlawIncMitigated",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "filter@1"
                },
                {
                    "command": "veracodeUnifiedExplorer.filterFlawExcMitigated",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "filter@2"
                },
                {
                    "command": "veracodeUnifiedExplorer.filterFlawIncNoneEffectPolicy",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "filter@3"
                },
                {
                    "command": "veracodeUnifiedExplorer.filterFlawOnlyEffectPolicy",
                    "when": "view == veracodeUnifiedExplorer",
                    "group": "filter@4"
                }
            ]
        },
        "submenus": [
            {
                "id": "filter.submenu",
                "label": "Filters"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "test": "npm run compile && node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/mocha": "^8.0.3",
        "@types/node": "^14.6.0",
        "mocha": "^8.1.2",
        "typescript": "^4.0.2",
        "vscode-test": "^1.4.0"
    },
    "dependencies": {
        "@types/glob": "^7.1.3",
        "@types/html-to-text": "^8.0.1",
        "@types/loglevel": "^1.6.3",
        "@types/vscode": "^1.48.0",
        "axios": "^0.21.1",
        "glob": "^7.1.6",
        "html-to-text": "^8.0.0",
        "loglevel": "^1.6.8"
    }
}
